import os


class Config:
    app_name = os.environ.get('APP_NAME') or "app"

    is_email_sending_allowed: bool = bool(os.environ.get('IS_EMAIL_SENDING_ALLOWED')) or False
    smtp_sender = ""
    smtp_server = ""
    smtp_port = ""
    smtp_login = ""
    smtp_password = ""

    is_cors_enable: bool = bool(os.environ.get('IS_CORS_ENABLE')) or False
    allow_origins: str = os.environ.get('ALLOW_ORIGINS') or 'app.loc'
    allow_credentials: str = os.environ.get('ALLOW_CREDENTIALS') or 'app.loc'

    is_cache_enabled: bool = bool(os.environ.get('IS_CACHE_ENABLED')) or False

    db_uri = os.environ.get('POSTGRES_DB_URI') \
        or "postgresql://db_user:db_password@localhost:1111/boilerplate"
    async_db_uri = os.environ.get('ASYNC_POSTGRES_DB_URI') \
        or "postgresql+asyncpg://db_user:db_password@localhost:1111/boilerplate"

    redis_host = os.environ.get('REDIS_HOST') or "localhost"
    redis_port = os.environ.get('REDIS_PORT') or "6379"
    redis_db = os.environ.get('REDIS_DB') or "1"
    redis_password = os.environ.get('REDIS_PASSWORD') or "foobared"

    log_level = os.environ.get('LOG_LEVEL') or "INFO"
    logger_format = "%(asctime)-15s %(levelname)-5.5s [%(name)s] %(request_id)s %(message)s"

    jwt_secret = os.environ.get('JWT_SECRET') or "jwt_secret"

    enable_logging = bool(os.environ.get("APP_WEB_LOG_ENABLED")) or True
    web_logging_dir = os.environ.get("APP_WEB_LOG_DIR") or "/var/lib/boilerplate_service/web_logs"


class TestConfig(Config):
    db_uri = os.environ.get('TEST_POSTGRES_DB_URI') \
        or "postgresql://db_user:db_password@localhost:1112/test_boilerplate"
    async_db_uri = os.environ.get('TEST_ASYNC_POSTGRES_DB_URI') \
        or "postgresql+asyncpg://db_user:db_password@localhost:1112/test_boilerplate"
    is_cache_enabled: bool = bool(os.environ.get('IS_TEST_CACHE_ENABLED')) or False
    jwt_secret = "jwt_secret"
    redis_db = os.environ.get('REDIS_DB') or "0"
    enable_logging = False
    is_email_sending_allowed = False
